{"id":"cse3","name":"CSE 3. Fluency in Information Technology (4)","unit":4.0,"description":"Introduces the concepts and skills necessary to effectively use information technology. Includes basic concepts and some practical skills with computer and networks.","prerequisites":"none."}
{"id":"cse4gs","name":"CSE 4GS. Mathematical Beauty in Rome (4)","unit":4.0,"description":"Exploration of topics in mathematics and engineering as they relate to classical architecture in Rome, Italy. In depth geometrical analysis and computer modeling of basic structures (arches, vaults, domes), and on-site studies of the Colosseum, Pantheon, Roman Forum, and St. Peter\u2019s Basilica.","prerequisites":"MATH 10A or MATH 20A; department approval, and corequisite of CSE 6GS."}
{"id":"cse6gs","name":"CSE 6GS. Mathematical Beauty in Rome Lab (4)","unit":4.0,"description":"Companion course to CSE 4GS where theory is applied and lab experiments are carried out \u201cin the field\u201d in Rome, Italy. For final projects, students will select a complex structure (e.g., the Colosseum, the Pantheon, St. Peter\u2019s, etc.) to analyze and model, in detail, using computer-based tools.","prerequisites":"MATH 10A or MATH 20A; department approval, and corequisite of CSE 4GS."}
{"id":"cse6r","name":"CSE 6R. Introduction to Computer Science and Object-Oriented Programming: Python (4)","unit":4.0,"description":"An introduction to computer science and programming using the Python language. The course will cover topics such as basic data types (e.g., integer, float, string), loops and iteration, basic data structures (e.g., list, set, dictionary), memory models, conditional statements, recursion, basic algorithm time complexity analysis, class design, and inheritance.","prerequisites":""}
{"id":"cse8a","name":"CSE 8A. Introduction to Programming and Computational Problem-Solving I (4)","unit":4.0,"description":"Introductory course for students interested in computer science and programming. Basics of programming including variables, conditionals, loops, functions\/methods. Structured data storage such as arrays\/lists and dictionaries, including data mutation. Hands-on experience with designing, writing, hand-tracing, compiling or interpreting, executing, testing, and debugging programs. Students solve relevant computational problems using a high-level programming language. CSE 8A is part of a two-course sequence (CSE 8A-B) that is equivalent to CSE 11. Students should take CSE 8B to complete the CSE 8A-B track. Students who have taken CSE 8B or CSE 11 may not take or receive credit for CSE 8A. Students may only receive credit for one of the following: BILD 62, COGS 18, CSE 8A, or CSE 6R. Recommended preparation: No prior programming experience is assumed, but comfort using computers is helpful. Students should consult the \u201cCSE Course Placement Advice\u201d web page for assistance in choosing which CSE course to take first.","prerequisites":"restricted to undergraduates. Graduate students will be allowed as space permits."}
{"id":"cse8b","name":"CSE 8B. Introduction to Programming and Computational Problem-Solving II (4)","unit":4.0,"description":"Introductory programming using an object-oriented approach with the Java programming language. Builds on basic programming constructs introduced in CSE 8A to introduce class design and use, interfaces, basic class hierarchies, recursion, event-based programming, error reporting with exceptions, and file I\/O. Basics of command-line navigation for file management and running programs. Development, testing, and debugging of more complex programs. CSE 8B is part of a two-course sequence (CSE 8A-B) that is equivalent to CSE 11. No credit offered for CSE 8B if CSE 11 taken previously. Students may not receive credit for CSE 8B and CSE 11. Students should consult the \u201cCSE Course Placement Advice\u201d web page for assistance in choosing which CSE course to take first","prerequisites":"CSE 8A; restricted to undergraduates. Graduate students will be allowed as space permits."}
{"id":"cse11","name":"CSE 11. Introduction to Programming and Computational Problem-Solving: Accelerated Pace (4)","unit":4.0,"description":"Accelerated introductory programming including an object-oriented approach. Covers basic programming topics from CSE 8A including variables, conditionals, loops, functions\/methods, structured data storage, and mutation. Also covers topics from CSE 8B including the Java programming language, class design, interfaces, basic class hierarchies, recursion, event-based programming, and file I\/O. Basics of command-line navigation for file management and running programs. Zero units of credit offered for CSE 11 if CSE 8B taken previously or concurrently. Recommended preparation: Significant prior programming experience (for example, high school AP CSA). Students should consult the \u201cCSE Course Placement Advice\u201d web page for assistance in choosing a first CSE course.","prerequisites":"restricted to undergraduates. Graduate students will be allowed as space permits."}
{"id":"cse12","name":"CSE 12. Basic Data Structures and Object-Oriented Design (4)","unit":4.0,"description":"Use and implementation of basic data structures including linked lists, stacks, and queues. Use of advanced structures such as binary trees and hash tables. Object-oriented design including interfaces, polymorphism, encapsulation, abstract data types, pre-\/post-conditions. Recursion. Uses Java and Java Collections.","prerequisites":"CSE 8B or CSE 11; restricted to undergraduates. Graduate students will be allowed as space permits."}
{"id":"cse15l","name":"CSE 15L. Software Tools and Techniques Laboratory (2)","unit":2.0,"description":"Hands-on exploration of software development tools and techniques. Investigation of the scientific process as applied to software development and debugging. Emphasis is on weekly hands-on laboratory experiences, development of laboratory notebooking techniques as applied to software design.","prerequisites":"CSE 8B or CSE 11 or CSE 12 or DSC 30; restricted to undergraduates. Graduate students will be allowed as space permits."}
{"id":"cse20","name":"CSE 20. Discrete Mathematics (4)","unit":4.0,"description":"This course will introduce the ways logic is used in computer science: for reasoning, as a language for specifications, and as operations in computation. Concepts include sets, relations, functions, equivalence relations, partial orders, number systems, and proof methods (especially induction and recursion). Propositional and predicate logic will be introduced and applied to various computer science domains such as circuit design, databases, cryptography, and program correctness. Students who have completed MATH 109 may not receive credit for CSE 20. Credit not offered for both MATH 15A and CSE 20. Equivalent to MATH 15A.","prerequisites":"CSE 11 or CSE 6R or CSE 8A or CSE 8B or ECE 15. Prerequisite courses must have been completed with a grade of C\u2013 or better; restricted to undergraduates. Graduate students will be allowed as space permits."}
{"id":"cse21","name":"CSE 21. Mathematics for Algorithms and Systems (4)","unit":4.0,"description":"This course will cover mathematical concepts used to model and analyze algorithms and computer systems. Topics include counting techniques (inclusion-exclusion; recursive counting; permutations and combinations), data representations, analysis of algorithms (order notation; time complexities; loop invariants), recurrence relations, graphs and trees (data structure representations; basic graph algorithms; special classes of graphs), and basic probability and its applications.","prerequisites":"CSE 20 or MATH 15A or MATH 31CH; students who have completed MATH 154 or MATH 184 or MATH 188 previously or concurrently may not receive credit for CSE 21; restricted to undergraduates. Graduate students will be allowed as space permits."}
{"id":"cse30","name":"CSE 30. Computer Organization and Systems Programming (4)","unit":4.0,"description":"Introduction to organization of modern digital computers\u2014understanding the various components of a computer and their interrelationships. Study of a specific architecture\/machine with emphasis on systems programming in C and Assembly languages in a UNIX environment.","prerequisites":"CSE 12 and CSE 15L; restricted to undergraduates. Graduate students will be allowed as space permits."}
{"id":"cse42","name":"CSE 42. Building and Programming Electronic Devices (2)","unit":2.0,"description":"This course allows students to use what they learned in introductory programming courses to make things happen in the real world. Working in teams, students will first learn to program Arduino-based devices. Teams of students will design a custom device and program it to do their bidding. This course is targeted to first-year students and sophomores in engineering and science disciplines who want to practice applying what they have learned in a programming class and to have the chance to program things other than computers. Program or materials fees may apply.","prerequisites":"restricted to first-year and sophomore students; instructor approval required."}
{"id":"cse86","name":"CSE 86. C++ for Java Programmers (2)","unit":2.0,"description":"Helps the Java programmer to be productive in the C++ programming environment. Topics include the similarities and differences between Java and C++ with special attention to pointers, operator overloading, templates, the STL, the preprocessor, and the C++ Runtime Environment.","prerequisites":"CSE 12 or consent of instructor."}
{"id":"cse87","name":"CSE 87. First-year Student Seminar (1)","unit":1.0,"description":"The First-year Student Seminar Program is designed to provide new students with the opportunity to explore an intellectual topic with a faculty member in a small seminar setting. First-year student seminars are offered in all campus departments and undergraduate colleges, and topics vary from quarter to quarter. Enrollment is limited to fifteen to twenty students, with preference given to entering first-year students.","prerequisites":"none."}
{"id":"cse90","name":"CSE 90. Undergraduate Seminar (1)","unit":1.0,"description":"A seminar providing an overview of a topic of current research interest to the instructor. The goal is to present a specialized topic in computer science and engineering students. May be taken for credit three times when topics vary.","prerequisites":""}
{"id":"cse91","name":"CSE 91. Perspectives in Computer Science and Engineering (2)","unit":2.0,"description":"A seminar format discussion led by CSE faculty on topics in central areas of computer science, concentrating on the relation among them, recent developments, and future directions.","prerequisites":"majors only."}
{"id":"cse95","name":"CSE 95. Tutor Apprenticeship (2)","unit":2.0,"description":"Students assigned to tutor for a CSE course for the first time receive individual and group mentoring and training on how to be effective tutors to help them develop the skills and tools needed to be effective in their tutor role. Students must have a concurrent tutor appointment in a CSE course. See CSE website for application information.","prerequisites":""}
{"id":"cse99","name":"CSE 99. Independent Study in Computer Science and Engineering (4)","unit":4.0,"description":"Independent reading or research by special arrangement with a faculty member.","prerequisites":"lower-division standing. Completion of thirty units at UC San Diego with a UC San Diego GPA of 3.0. Special Studies form required. Department stamp required. Consent of instructor and approval of the department."}
{"id":"cse100","name":"CSE 100. Advanced Data Structures (4)","unit":4.0,"description":"High-performance data structures and supporting algorithms. Use and implementation of data structures like (un)balanced trees, graphs, priority queues, and hash tables. Also, memory management, pointers, recursion. Theoretical and practical performance analysis, both average case and amortized. Uses C++ and STL. Recommended preparation: background in C or C++ programming.","prerequisites":"CSE 21 or MATH 154 or MATH 158 or MATH 184 or MATH 188 and CSE 12 and CSE 15L and CSE 30 or ECE 15; restricted to undergraduates. Graduate students will be allowed as space permits. Students may not receive credit for both CSE 100R and CSE 100."}
{"id":"cse100r","name":"CSE 100R. Advanced Data Structures (4)","unit":4.0,"description":"High-performance data structures and supporting algorithms. Use and implementation of data structures like (un)balanced trees, graphs, priority queues, and hash tables. Also memory management, pointers, recursion. Theoretical and practical performance analysis, both average case and amortized. Uses C++ and STL.","prerequisites":"CSE 21 or MATH 154 or MATH 158 or MATH 184 or MATH 188 and CSE 12 and CSE 15L and CSE 30 or ECE 15. This course is a distance education course. Students may not receive credit for both CSE 100R and CSE 100."}
{"id":"cse101","name":"CSE 101. Design and Analysis of Algorithms (4)","unit":4.0,"description":"Design and analysis of efficient algorithms with emphasis of nonnumerical algorithms such as sorting, searching, pattern matching, and graph and network algorithms. Measuring complexity of algorithms, time and storage. NP-complete problems.","prerequisites":"CSE 21 or MATH 154 or MATH 158 or MATH 184 or MATH 188 and CSE 12 or DSC 30; restricted to undergraduates. Graduate students will be allowed as space permits."}
{"id":"cse103","name":"CSE 103. A Practical Introduction to Probability and Statistics (4)","unit":4.0,"description":"Distributions over the real line. Independence, expectation, conditional expectation, mean, variance. Hypothesis testing. Learning classifiers. Distributions over R^n, covariance matrix. Binomial, Poisson distributions. Chernoff bound. Entropy. Compression. Arithmetic coding. Maximal likelihood estimation. Bayesian estimation. CSE 103 is not duplicate credit for ECE 109, ECON 120A, or MATH 183.","prerequisites":"MATH 20B and CSE 21 or MATH 154 or MATH 158 or MATH 184 or MATH 188; restricted to CS25, CS26, CS27, and CS28 majors. Other students will be allowed as space permits."}
{"id":"cse105","name":"CSE 105. Theory of Computability (4)Tag: Theory\/Abstraction","unit":4.0,"description":"An introduction to the mathematical theory of computability. Formal languages. Finite automata and regular expressions. Push-down automata and context-free languages. Computable or recursive functions: Turing machines, the halting problem. Undecidability.","prerequisites":"CSE 12 and CSE 15L and CSE 20 or MATH 109 or MATH 15A or MATH 31CH and CSE 21 or MATH 100A or MATH 103A or MATH 154 or MATH 158 or MATH 184 or MATH 188. Graduate students will be allowed as space permits."}
{"id":"cse106","name":"CSE 106. Discrete and Continuous Optimization (4)Tag: Theory\/Abstraction","unit":4.0,"description":"One frequently deals with problems in engineering, data science, business, economics, and other disciplines for which algorithmic solutions that optimize a given quantity under constraints are desired. This course is an introduction to the models, theory, methods, and applications of discrete and continuous optimization. Topics include shortest paths, flows, linear, integer, and convex programming, and continuous optimization techniques such as steepest descent and Lagrange multipliers.","prerequisites":"MATH 18 or MATH 31AH and MATH 20C or MATH 31BH and CSE 21 or DSC 40B or MATH 154 or MATH 158 or MATH 184 or MATH 188."}
{"id":"cse107","name":"CSE 107. Introduction to Modern Cryptography (4)Tag: Theory\/Abstraction","unit":4.0,"description":"Topics include private and public-key cryptography, block ciphers, data encryption, authentication, key distribution and certification, pseudorandom number generators, design and analysis of protocols, zero-knowledge proofs, and advanced protocols. Emphasizes rigorous mathematical approach including formal definitions of security goals and proofs of protocol security.","prerequisites":"CSE 21 or MATH 154 or MATH 158 or MATH 184 or MATH 188 and CSE 101 and CSE 105; restricted to students within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."}
{"id":"cse109","name":"CSE 109. Introduction to Programming Contests (2)","unit":2.0,"description":"This course introduces the algorithms and concepts necessary to compete in programming contests like ACM International Collegiate Programming Contest (ICPC). The course requires weekly completion of short problem sets. Topics covered include standard library classes and data structures useful for programming contest problems, basic complexity analysis, dynamic programming, graph algorithms, number theory, combinatorics, computational geometry, combinatorial games, and contest strategy.","prerequisites":"CSE 30 or permission of instructor."}
{"id":"cse109","name":"CSE 110. Software Engineering (4)","unit":4.0,"description":"Introduction to software development and engineering methods, including specification, design, implementation, testing, and process. An emphasis on team development, agile methods, and use of tools such as IDE\u2019s, version control, and test harnesses.","prerequisites":"CSE 100 or CSE 100R; restricted to students within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."}
{"id":"cse112","name":"CSE 112. Advanced Software Engineering (4)Tag: Applications of Computing","unit":4.0,"description":"This course will cover software engineering topics associated with large systems development such as requirements and specifications, testing and maintenance, and design. Specific attention will be given to development tools and automated support environments.","prerequisites":"CSE 110; restricted to students within the CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."}
{"id":"cse118","name":"CSE 118. Ubiquitous Computing (4)Tag: Applications of Computing","unit":4.0,"description":"Explores emerging opportunities enabled by cheap sensors and networked computing devices. Small research projects will be conducted in teams, culminating in project presentations at the end of the term. Section will cover material relevant to the project, such as research methods, software engineering, teamwork, and project management.","prerequisites":"any course from the following: CSE 131, CSE 132B, COGS 102C, COGS 121, COGS 184, COMT 111B, COMT 115, ECE 111, ECE 118, ECE 191, ECE 192, or ICAM 160B; or consent of instructor."}
{"id":"cse120","name":"CSE 120. Principles of Computer Operating Systems (4)Tag: Systems","unit":4.0,"description":"Basic functions of operating systems; basic kernel structure, concurrency, memory management, virtual memory, file systems, process scheduling, security and protection.","prerequisites":"CSE 30 and CSE 101 and CSE 110; restricted to students within the CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."}
{"id":"cse123","name":"CSE 123. Computer Networks (4)Tag: Systems","unit":4.0,"description":"Introduction to concepts, principles, and practice of computer communication networks with examples from existing architectures, protocols, and standards with special emphasis on the internet protocols. Layering and the OSI model; physical and data link layers; local and wide area networks; datagrams and virtual circuits; routing and congestion control; internetworking. Transport protocols. Credit may not be received for both CSE 123 and ECE 158A.","prerequisites":"CSE 30 and CSE 101 and CSE 110; restricted to students within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."}
{"id":"cse124","name":"CSE 124. Networked Services (4)Tag: Systems","unit":4.0,"description":"(Renumbered from CSE 123B.) The architecture of modern networked services, including data center design, enterprise storage, fault tolerance, and load balancing. Protocol software structuring, the Transmission Control Protocol (TCP), remote procedure calls, protocols for digital audio and video communication, overlay and peer-to-peer systems, secure communication. Credit may not be received for both CSE 124 and ECE 158B. Students may not receive credit for both CSE 123B and CSE 124.","prerequisites":"CSE 30 and CSE 101 and CSE 110; restricted to students within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."}
{"id":"cse125","name":"CSE 125. Software System Design and Implementation (4)Tag: Applications of Computing","unit":4.0,"description":"Design and implementation of large, complex software systems involving multiple aspects of CSE curriculum. Emphasis is on software system design applied to a single, large group project with close interaction with instructor.","prerequisites":"senior standing with substantial programming experience, and consent of instructor. Department stamp required."}
{"id":"cse127","name":"CSE 127. Introduction to Computer Security (4)Tags: Systems, Applications of Computing","unit":4.0,"description":"Topics include basic cryptography, security\/threat analysis, access control, auditing, security models, distributed systems security, and theory behind common attack and defense techniques. The class will go over formal models as well as the bits and bytes of security exploits.","prerequisites":"CSE 21 or MATH 154 or MATH 158 or MATH 184 or MATH 188 and CSE 120 or CSE 123 or CSE 124; restricted to students within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."}
{"id":"cse130","name":"CSE 130. Programming Languages: Principles and Paradigms (4)Tag: Theory\/Abstraction","unit":4.0,"description":"(Formerly CSE 173.) Introduction to programming languages and paradigms, the components that comprise them, and the principles of language design, all through the analysis and comparison of a variety of languages (e.g., Pascal, Ada, C++, PROLOG, ML.) Will involve programming in most languages studied.","prerequisites":"CSE 12 and CSE 100 or CSE 100R and CSE 105; restricted to students within the CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."}
{"id":"cse131","name":"CSE 131. Compiler Construction (4)Tag: Applications of Computing","unit":4.0,"description":"(Formerly CSE 131B.) Introduction to the compilation of programming languages, practice of syntax-directed translation, type checking, code generation, optimization, interpretation, and compiler structure. Students may receive repeat credit for CSE 131A and CSE 131B by completing CSE 131.\u00a0May be coscheduled with CSE 231.","prerequisites":"CSE 100 or CSE 100R and CSE 105 and CSE 130; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."}
{"id":"cse132a","name":"CSE 132A. Database System Principles (4)Tag: Theory\/Abstraction","unit":4.0,"description":"Basic concepts of databases, including data modeling, relational databases, query languages, optimization, dependencies, schema design, and concurrency control. Exposure to one or several commercial database systems. Advanced topics such as deductive and object-oriented databases, time allowing.","prerequisites":"CSE 100 or CSE 100R; restricted to students within the CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."}
{"id":"cse132b","name":"CSE 132B. Database Systems Applications (4)Tag: Applications of Computing","unit":4.0,"description":"Design of databases, transactions, use of trigger facilities and datablades. Performance measuring, organization of index structures.","prerequisites":"CSE 132A; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."}
{"id":"cse132c","name":"CSE 132C. Database System Implementation (4)Tag: Systems","unit":4.0,"description":"This is a systems-focused course on the internals of a relational database management system (RDBMS). RDBMSs power large-scale structured data management in most digital applications. The topics span data storage, buffer management, indexing, sorting, relational operator implementations, query processing and optimization, parallel RDBMSs, and \u201cBig Data\u201d systems. Two C++ programming projects require implementation of a buffer manager and a B+ tree index using a given RDBMS skeleton. Recommended preparation: C++ programming knowledge is required; CSE 132B is recommended.","prerequisites":"CSE 132A or DSC 102; restricted to CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."}
{"id":"cse134b","name":"CSE 134B. Web Client Languages (4)Tag: Applications of Computing","unit":4.0,"description":"Design and implementation of interactive World Wide Web clients using helper applications and plug-ins.\u00a0The main language covered will be Java.","prerequisites":"CSE 100 or CSE 100R; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."}
{"id":"cse135","name":"CSE 135. Online Database Analytics Applications (4)Tag: Applications of Computing","unit":4.0,"description":"Database, data warehouse, and data cube design; SQL programming and querying with emphasis on analytics; online analytics applications, visualizations, and data exploration; performance tuning.","prerequisites":"CSE 100 or CSE 100R; restricted to students within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."}
{"id":"cse136","name":"CSE 136. Enterprise-Class Web Applications (4)Tag: Applications of Computing","unit":4.0,"description":"Design and implementation of very large-scale, web-based applications. Topics covered typically include modeling organizational needs, design and revision management, J2EE or similar software platforms, web server and application server functionality, reuse of object-oriented components, model-view-controller and other design patterns, clustering, load-balancing, fault-tolerance, authentication, and usage accounting.","prerequisites":"CSE 135."}
{"id":"cse140","name":"CSE 140. Components and Design Techniques for Digital Systems (4)Tags: Systems, Theory\/Abstraction, Applications of Computing","unit":4.0,"description":"Design of Boolean logic and finite state machines; two-level, multilevel combinational logic design, combinational modules and modular networks, Mealy and Moore machines, analysis and synthesis of canonical forms, sequential modules.","prerequisites":"CSE 20 or MATH 109 or MATH 15A or MATH 31CH and CSE 30; CSE 140L must be taken concurrently; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."}
{"id":"cse140l","name":"CSE 140L. Digital Systems Laboratory (2)Tags: Systems, Applications of Computing","unit":2.0,"description":"Implementation with computer-aided design tools for combinational logic minimization and state machine synthesis. Hardware construction of a small digital system.","prerequisites":"CSE 20 or MATH 109 or MATH 15A or MATH 31CH and CSE 30; CSE 140 must be taken concurrently; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."}
{"id":"cse141","name":"CSE 141. Introduction to Computer Architecture (4)Tag: Systems","unit":4.0,"description":"Introduction to computer architecture. Computer system design. Processor design. Control design. Memory systems.\u00a0Two units of credit offered for CSE 141 if CSE 142 taken previously.","prerequisites":"CSE 30 and CSE 140 and CSE 140L; CSE 141L should be taken concurrently; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."}
{"id":"cse141l","name":"CSE 141L. Project in Computer Architecture (2)Tag: Systems","unit":2.0,"description":"Hands-on computer architecture project aiming to familiarize students with instruction set architecture, and design of process. Control and memory systems.","prerequisites":"CSE 30 and CSE 140 and CSE 140L; CSE 141 should be taken concurrently; restricted to CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."}
{"id":"cse142","name":"CSE 142. Introduction to Computer Architecture: A Software Perspective (4)Tag: Systems","unit":4.0,"description":"This course covers the operation, structure, and programming interfaces of modern CPUs with an emphasis on exploiting processor features to improve software performance and efficiency. The topics covered in this course include performance, energy, x86 assembly, compiler optimizations, pipelining, instruction-level parallelism, caches, memory-level parallelism, multi-threading, multi-core processors, and SIMD. Two units of credit offered for CSE 142 if CSE 141 taken previously or concurrently.","prerequisites":"CSE 30 and CSE 100 or CSE 100R; CSE 142L should be taken concurrently. Restricted to students within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."}
{"id":"cse142l","name":"CSE 142L. Software Project for Computer Architecture (2)Tags: Systems, Applications of Computing","unit":2.0,"description":"This course provides hands-on experience in using the features of modern CPUs to increase the performance and efficiency of programs.","prerequisites":"CSE 30 and CSE 100 or CSE 100R; CSE 142 should be taken concurrently. Restricted to students within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."}
{"id":"cse143","name":"CSE 143. Microelectronic System Design (4)Tag: Systems","unit":4.0,"description":"VLSI process technologies; circuit characterization; logic design styles; clocking strategies; computer-aided design tools; subsystem design; design case studies. System design project from hardware description, logic synthesis, physical layout to design verification.","prerequisites":"CSE 140. Restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."}
{"id":"cse145","name":"CSE 145. Embedded System Design Project (4)Tags: Systems, Applications of Computing","unit":4.0,"description":"Project class building an embedded computing system. Learn fundamental knowledge of microcontrollers, sensors, and actuators. Introduction to the hardware and software tools to build project in a team environment and end-to-end system building.","prerequisites":"instructor approval required, by application only."}
{"id":"cse148","name":"CSE 148. Advanced Processor Architecture Design Project (4)Tags: Systems, Applications of Computing","unit":4.0,"description":"Students will use hardware description language tools to add advanced architectural features to a basic processor design. These features may include pipelining, superscalar execution, branch prediction, and advanced cache features. Designs will be implemented in programmable logic devices.","prerequisites":"CSE 141 and CSE 141L; graduate students will be allowed as space permits."}
{"id":"cse150a","name":"CSE 150A. Introduction to Artificial Intelligence: Probabilistic Reasoning and Decision-Making (4)Tag: Theory\/Abstraction","unit":4.0,"description":"Introduction to probabilistic models at the heart of modern artificial intelligence. Specific topics to be covered include probabilistic methods for reasoning and decision-making under uncertainty; inference and learning in Bayesian networks; prediction and planning in Markov decision processes; applications to intelligent systems, speech and natural language processing, information retrieval, and robotics.","prerequisites":"CSE 12 or DSC 40B and CSE 15L or DSC 80 and COGS 118D or CSE 103 or ECE 109 or ECON 120A or MATH 180A or MATH 183 and MATH 20A and MATH 18 or MATH 31AH; restricted to students within the CS25, CS26, CS27, CS28, EC26, and DS25 majors. All other students will be allowed as space permits."}
{"id":"cse150b","name":"CSE 150B. Introduction to Artificial Intelligence: Search and Reasoning (4)Tag: Applications of Computing","unit":4.0,"description":"The course will introduce important ideas and algorithms in search and reasoning and demonstrate how they are used in practical AI applications. Topics include A* search, adversarial search, Monte Carlo tree search, reinforcement learning, constraint solving and optimization, propositional and first-order reasoning.","prerequisites":"CSE 12 or DSC 40B and CSE 15L or DSC 80 and COGS 118D or CSE 103 or ECE 109 or ECON 120A or MATH 180A or MATH 183 and CSE 100 or CSE 100R; restricted to students within the CS25, CS26, CS27, CS28, EC26, and DS25 majors. All other students will be allowed as space permits."}
{"id":"cse151a","name":"CSE 151A. Introduction to Machine Learning (4)Tag: Applications of Computing","unit":4.0,"description":"Broad introduction to machine learning. The topics include some topics in supervised learning, such as k-nearest neighbor classifiers, decision trees, boosting, and perceptrons; and topics in unsupervised learning, such as k-means and hierarchical clustering. In addition to the actual algorithms, the course focuses on the principles behind the algorithms. Students may not receive credit for both CSE 151A and COGS 188, nor may they receive credit for both CSE 151A and CSE 151.","prerequisites":"CSE 12 or DSC 40B and CSE 15L or DSC 80 and COGS 118D or CSE 103 or ECE 109 or ECON 120A or MATH 181A or MATH 183 and MATH 18 or MATH 31AH and MATH 20C or MATH 31BH; restricted to students within the CS25, CS26, CS27, CS28, EC26, and DS25 majors. All other students will be allowed as space permits."}
{"id":"cse151b","name":"CSE 151B. Deep Learning (4)Tag: Applications of Computing","unit":4.0,"description":"(Formerly CSE 154.) This course covers the fundamentals of neural networks. We introduce linear regression, logistic regression, perceptrons, multilayer networks and back-propagation, convolutional neural networks, recurrent networks, and deep networks trained by reinforcement learning. Students may receive credit for one of the following: CSE 151B, CSE 154, or COGS 181.","prerequisites":"MATH 20C or MATH 31BH and BENG 134 or COGS 118D or CSE 103 or ECE 109 or ECON 120A or MAE 108 or MATH 181A or MATH 183 or MATH 186; restricted to students with sophomore, junior, or senior standing within the CS25, CS26, CS27, CS28, EC26, and DS25 majors. All other students will be allowed as space permits."}
{"id":"cse152a","name":"CSE 152A. Introduction to Computer Vision I (4)Tag: Applications of Computing","unit":4.0,"description":"This course provides a broad introduction to the foundations, algorithms, and applications of computer vision. It introduces classical models and contemporary methods, from image formation models to deep learning, to address problems of 3-D reconstruction and object recognition from images and video. Topics include filtering, feature detection, stereo vision, structure from motion, motion estimation, and recognition. Programming assignments will be in Python. Students may not receive credit for both CSE 152A and CSE 152.","prerequisites":"MATH 18 or MATH 31AH and CSE 12 or DSC 30 and CSE 15L or DSC 80; Python programming experience recommended; restricted to students within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."}
{"id":"cse152b","name":"CSE 152B. Introduction to Computer Vision II (4)Tag: Applications of Computing","unit":4.0,"description":"This course covers advanced topics needed to apply computer vision in industry or follow current research. Example topics include real-time systems for 3-D computer vision, machine learning tools such as support-vector machine (SVM) and boosting for image classification, and deep neural networks for object detection and semantic segmentation.","prerequisites":"CSE 152A or CSE 152 or CSE 166; Python programming experience recommended; restricted to students within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."}
{"id":"cse156","name":"CSE 156. Statistical Natural Language Processing (4)Tag: Applications of Computing","unit":4.0,"description":"Natural language processing (NLP) is a field of AI which aims to equip computers with the ability to intelligently process natural (human) language. This course will explore statistical techniques for the automatic analysis of natural language data. Specific topics covered include probabilistic language models, which define probability distributions over text passages; text classification; sequence models; parsing sentences into syntactic representations; and machine translation.","prerequisites":"CSE 12 or DSC 40B and CSE 15L or DSC 80 and BENG 134 or COGS 118D or CSE 103 or ECE 109 or ECON 120A or MATH 180A or MATH 181A or MATH 183 or MATH 186; restricted to students within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."}
{"id":"cse158","name":"CSE 158. Recommender Systems and Web Mining (4)Tag: Applications of Computing","unit":4.0,"description":"Current methods for data mining and predictive analytics. Emphasis is on studying real-world data sets, building working systems, and putting current ideas from machine learning research into practice.","prerequisites":"CSE 12 or DSC 40B and CSE 15L or DSC 80 and BENG 100 or BENG 134 or COGS 118D or CSE 103 or ECE 109 or ECON 120A or MATH 180A or MATH 181A or MATH 183 or MATH 186; restricted to students within the CS25, CS26, CS27, CS28, EC26, and DS25 majors. All other students will be allowed as space permits. May be coscheduled with CSE 258. Students may not receive credit for CSE 158 and CSE 158R or DSC 148."}
{"id":"cse158r","name":"CSE 158R. Recommender Systems and Web Mining (4)Tag: Applications of Computing","unit":4.0,"description":"Current methods for data mining and predictive analytics. Emphasis is on studying real-world data sets, building working systems, and putting current ideas from machine learning research into practice.","prerequisites":"CSE 12 or DSC 40B and CSE 15L or DSC 80 and BENG 100 or BENG 134 or COGS 118D or CSE 103 or ECE 109 or ECON 120A or MATH 180A or MATH 181A or MATH 183 or MATH 186; restricted to students within the CS25, CS26, CS27, CS28, EC26, and DS25 majors. All other students will be allowed as space permits. This will be a fully online class based on extensive educational materials and an online educational platform. May be coscheduled with CSE 258R. Students may not receive credit for CSE 158R and CSE 158 or DSC 148."}
{"id":"cse160","name":"CSE 160. Introduction to Parallel Computing (4)Tag: Systems","unit":4.0,"description":"Introduction to high performance parallel computing: parallel architecture, algorithms, software, and problem-solving techniques. Areas covered: Flynn\u2019s taxonomy, processor-memory organizations, shared and nonshared memory models: message passing and multithreading, data parallelism; speedup, efficiency and Amdahl\u2019s law, communication and synchronization, isoefficiency and scalability. Assignments given to provide practical experience.","prerequisites":"CSE 100 or CSE 100R; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits"}
{"id":"cse163","name":"CSE 163. Advanced Computer Graphics (4)Tag: Applications of Computing","unit":4.0,"description":"Topics include an overview of many aspects of computer graphics, including the four main computer graphics areas of animation, modeling, rendering, and imaging. Programming projects in image and signal processing, geometric modeling, and real-time rendering.","prerequisites":"CSE 167; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."}
{"id":"cse165","name":"CSE 165. 3-D User Interaction (4)Tag: Applications of Computing","unit":4.0,"description":"This course focuses on the design of three-dimensional (3-D) user interfaces, VR devices, and interaction techniques. The course consists of lectures, student presentations, and programming assignments. Students will be expected to create VR applications to learn how VR displays and 3-D interactions work.","prerequisites":"CSE 167; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."}
{"id":"cse166","name":"CSE 166. Image Processing (4)Tag: Applications of Computing","unit":4.0,"description":"Principles of image formation, analysis, and representation. Image enhancement, restoration, and segmentation; stochastic image models. Filter design, sampling, Fourier and wavelet transforms. Selected applications in computer graphics and machine vision.","prerequisites":"DSC 40B or MATH 18 or MATH 31AH and CSE 100 or CSE 100R or DSC 80."}
{"id":"cse167","name":"CSE 167. Computer Graphics (4)Tag: Applications of Computing","unit":4.0,"description":"Representation and manipulation of pictorial data. Two-dimensional and three-dimensional transformations, curves, surfaces. Projection, illumination, and shading models. Raster and vector graphic I\/O devices; retained-mode and immediate-mode graphics software systems and applications. Students may not receive credit for both MATH 155A and CSE 167.","prerequisites":"CSE 100 or CSE 100R; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."}
{"id":"cse168","name":"CSE 168. Computer Graphics II: Rendering (4)Tag: Applications of Computing","unit":4.0,"description":"Weekly programming assignments that will cover graphics rendering algorithms. During the course the students will learn about ray tracing, geometry, tessellation, acceleration structures, sampling, filtering, shading models, and advanced topics such as global illumination and programmable graphics hardware.","prerequisites":"CSE 167; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."}
{"id":"cse169","name":"CSE 169. Computer Animation (4)Tag: Applications of Computing","unit":4.0,"description":"Advanced graphics focusing on the programming techniques involved in computer animation. Algorithms and approaches for both character animation and physically based animation. Particular subjects may include skeletons, skinning, key framing, facial animation, inverse kinematics, locomotion, motion capture, video game animation, particle systems, rigid bodies, clothing, and hair. Recommended preparation: an understanding of linear algebra.","prerequisites":"CSE 167; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."}
{"id":"cse170","name":"CSE 170. Interaction Design (5)Tag: Applications of Computing","unit":5.0,"description":"Introduces fundamental methods and principles for designing, implementing, and evaluating user interfaces. Topics include user-centered design, rapid prototyping, experimentation, direct manipulation, cognitive principles, visual design, social software, software tools. Learn by doing: Work with a team on a quarter-long design project. Students may not receive credit for COGS 120 and CSE 170. Recommended preparation: Basic familiarity with HTML.","prerequisites":"COGS 108 or CSE 12 or DSC 30 and COGS 1 or COGS 10 or DSGN 1 or ENG 100D."}
{"id":"cse175","name":"CSE 175. Successful Entrepreneurship for Engineers (4)Tag: Applications of Computing","unit":4.0,"description":"A foundation course teaching the basics of starting and running a successful new business. Students learn how to think like entrepreneurs, pivot their ideas to match customer needs, with financial, market, timeline feasibility inputs. The end goal is an investor pitch and a business plan. Provides experiential education, encouragement, and coaching (E3CE) that prepares students for successful careers at start-up as well as large companies.","prerequisites":"instructor approval required to ensure sufficient project experience to be successful in the course. No credit offered for CSE 175 if ECE 150 taken previously or concurrently."}
{"id":"cse176a","name":"CSE 176A. Health Care Robotics (4)Tag: Applications of Computing","unit":4.0,"description":"Robotics has the potential to improve well-being for millions of people and support caregivers and to aid the clinical workforce. We bring together engineers, clinicians, and end users to explore this exciting new field. The course is project-based, interactive, and hands-on, and involves working closely with stakeholders to develop prototypes that solve real-world problems. Students will explore the latest research in health care robotics, human-robot teaming, and health design. Program or materials fees may apply.","prerequisites":"CSE 110 or CSE 170 or COGS 120."}
{"id":"cse176e","name":"CSE 176E. Robot Systems Design and Implementation (4)Tag: Applications of Computing","unit":4.0,"description":"End-to-end system design of embedded electronic systems including PCB design and fabrication, software control system development, and system integration. Program or materials fees may apply. May be coscheduled with CSE 276E.","prerequisites":"restricted to junior and senior students; instructor approval required."}
{"id":"cse180","name":"CSE 180. Biology Meets Computing (4)","unit":4.0,"description":"Topics include an overview of various aspects of bioinformatics and will simultaneously introduce students to programming in Python. The assessments in the course represent various programming challenges and include solving diverse biological problems using popular bioinformatics tools. Students may not receive credit for CSE 180 and CSE 180R.","prerequisites":"BILD 1 or BILD 4 or CSE 11 or CSE 3 or CSE 8A or CSE 8B."}
{"id":"cse180r","name":"CSE 180R. Biology Meets Computing (4)","unit":4.0,"description":"Topics include an overview of various aspects of bioinformatics and will simultaneously introduce students to programming in Python. The assessments in the course represent various programming challenges and include solving diverse biological problems using popular bioinformatics tools. This will be a fully online class based on extensive educational materials and online educational platform Stepik developed with HHMI, NIH, and ILTI support. Students may not receive credit for CSE 180 and CSE 180R.","prerequisites":"BILD 1 or BILD 4 or CSE 11 or CSE 3 or CSE 8A or CSE 8B."}
{"id":"cse181","name":"CSE 181. Molecular Sequence Analysis (4)Tag: Applications of Computing","unit":4.0,"description":"This course covers the analysis of nucleic acid and protein sequences, with an emphasis on the application of algorithms to biological problems. Topics include sequence alignments, database searching, comparative genomics, and phylogenetic and clustering analyses. Pairwise alignment, multiple alignment, DNS sequencing, scoring functions, fast database search, comparative genomics, clustering, phylogenetic trees, gene finding\/DNA statistics. Students may receive credit for one of the following: CSE 181, BIMM 181, or BENG 181.","prerequisites":"CSE 100 or CSE 100R\u00a0and CSE 101 and BIMM 100 or CHEM 114C; restricted to BE28, BI34, CH37, and CS27 majors. Students may receive credit for one of the following: CSE 181, BIMM 181, or BENG 181."}
{"id":"cse182","name":"CSE 182. Biological Databases (4)Tag: Applications of Computing","unit":4.0,"description":"This course provides an introduction to the features of biological data, how those data are organized efficiently in databases, and how existing data resources can be utilized to solve a variety of biological problems. Object oriented databases, data modeling and description. Survey of current biological database with respect to above, implementation of a database on a biological topic. Students may receive credit for one of the following: CSE 182, BENG 182, or BIMM 182.","prerequisites":"CSE 100 or CSE 100R; restricted to BE28, BI34, CH37, and CS27 majors."}
{"id":"cse184","name":"CSE 184. Computational Molecular Biology (4)Tag: Applications of Computing","unit":4.0,"description":"This advanced course covers the application of machine learning and modeling techniques to biological systems. Topics include gene structure, recognition of DNA and protein sequence patterns, classification, and protein structure prediction. Pattern discovery, Hidden Markov models\/support victor machines\/neural network\/profiles. Protein structure prediction, functional characterization or proteins, functional genomics\/proteomics, metabolic pathways\/gene networks. Cross-listed with BIMM 184\/BENG 184\/CHEM 184.","prerequisites":"BIMM 181 or BENG 181 or CSE 181, BENG 182 or BIMM 182 or CSE 182 or CHEM 182. Bioinformatics majors only."}
{"id":"cse185","name":"CSE 185. Advanced Bioinformatics Laboratory (4)Tag: Applications of Computing","unit":4.0,"description":"This course emphasizes the hands-on application of bioinformatics to biological problems. Students will gain experience in the application of existing software, as well as in combining approaches to answer specific biological questions. Topics include sequence alignment, fast database search, comparative genomics, expression analysis, computational proteomics, genome-wide association studies, next-generation sequencing, genomics, and big data. Students may not receive credit for CSE 185 and BIMM 185. Restricted to CS27, BI34, BE28, and CH37 majors.","prerequisites":"CSE 11 or CSE 8B and CSE 12 and MATH 20C or MATH 31BH and BILD 1 and BIEB 123 or BILD 4 or BIMM 101 or CHEM 109."}
{"id":"cse190","name":"CSE 190. Topics in Computer Science and Engineering (4)","unit":4.0,"description":"Topics of special interest in computer science and engineering. Topics may vary from quarter to quarter. May be repeated for credit with the consent of instructor.\u00a0May be taken for credit up to three times. May be coscheduled with CSE 291.","prerequisites":"consent of instructor. Department stamp required."}
{"id":"cse191","name":"CSE 191. Seminar in CSE (1\u20134)","unit":null,"description":"A seminar course on topics of current interest. Students, as well as the instructor, will be actively involved in running the course\/class. This course cannot be counted toward a technical elective.","prerequisites":"consent of instructor. Department stamp required."}
{"id":"cse192","name":"CSE 192. Senior Seminar in Computer Science and Engineering (1)","unit":1.0,"description":"The Senior Seminar Program is designed to allow senior undergraduates to meet with faculty members in a small group setting to explore an intellectual topic in CSE (at the upper-division level). Topics will vary from quarter to quarter. Senior seminars may be taken for credit up to four times, with a change in topic, and permission of the department. Enrollment is limited to twenty students, with preference given to seniors. (P\/NP grades only.)","prerequisites":"upper-division standing; department stamp required and consent of instructor."}
{"id":"cse193","name":"CSE 193. Introduction to Computer Science Research (4)Tag: Applications of Computing","unit":4.0,"description":"Introduction to research in computer science. Topics include defining a CS research problem, finding and reading technical papers, oral communication, technical writing, and independent learning. Course participants apprentice with a CSE research group and propose an original research project.","prerequisites":"consent of the department chair. Department stamp required."}
{"id":"cse194","name":"CSE 194. Race, Gender, and Computing (4)Tag: Applications of Computing","unit":4.0,"description":"This course explores the challenges of diversity, equity, and inclusion (DEI) in computing and technology through an introduction to and analysis of various social constructs and their impact on not only computing-related organizations, but also the technologies developed and the people affected by them. This course also introduces students to cultural competence in the context of computing.","prerequisites":"AAS 10 or CSE 12 or ECE 35 or ETHN 3 or HILD 7A or LTEN 27 and CAT 125 or CAT 125R or CAT 3 or DOC 3 or HUM 2 or MCWP 125 or MCWP 125R or MCWP 50 or MCWP 50R or MMW 121 or MMW 121R or MMW 122 or MMW 13 or SYN 2 or WCWP 100 or WCWP 10B."}
{"id":"cse197","name":"CSE 197. Field Study in Computer Science and Engineering (4)","unit":4.0,"description":"Directed study accompanying full-time on-site computer science internships. (P\/NP grades only.)","prerequisites":"consent of the instructor and approval of the department required. Students may receive credit for one of the following: CSE 197 or CSE 197C. Restricted to CS25, CS26, CS27, and CS28 majors only."}
{"id":"cse197c","name":"CSE 197C. Cooperative Practicum in Computer Science and Engineering (12)","unit":12.0,"description":"Directed study accompanying full-time on-site computer science cooperative education practicum.","prerequisites":"department approval. Restricted to CS25, CS26, and CS27 majors only. Students may receive credit for one of the following: CSE 197C or CSE 197."}
{"id":"cse198","name":"CSE 198. Directed Group Study (2 or 4)","unit":null,"description":"Computer science and engineering topics whose study involves reading and discussion by a small group of students under the supervision of a faculty member. (P\/NP grades only.)","prerequisites":"consent of the instructor. Department stamp required."}
{"id":"cse199","name":"CSE 199. Independent Study for Undergraduates (2 or 4)","unit":null,"description":"Independent reading or research by special arrangement with a faculty member. (P\/NP grades only.)","prerequisites":"consent of the instructor. Department stamp required."}
{"id":"cse199h","name":"CSE 199H. CSE Honors Thesis Research for Undergraduates (4)","unit":4.0,"description":"Undergraduate research for completing an honors project under the supervision of a CSE faculty member. May be taken across multiple quarters. Students should enroll for a letter grade. May be taken for credit three times.","prerequisites":"Admission to the CSE department honors program. Consent of the instructor. Department stamp required."}
{"id":"cse200","name":"CSE 200. Computability and Complexity (4)","unit":4.0,"description":"Computability review, including halting problem, decidable sets, r.e. sets, many-one reductions; TIME(t(n)), SPACE(s(n)) and general relations between these classes; L, P, PSPACE, NP; NP\u2014completeness; hierarchy theorems; RP, BPP.","prerequisites":"CSE 105 or equivalent."}
{"id":"cse201a","name":"CSE 201A. Advanced Complexity (4)","unit":4.0,"description":"Polynomial-time hierarchy (PH), BPP in second level of PH, Savitch\u2019s theorem, NL=coNL, nonuniform and circuit complexity, some circuit lower bounds, IP=PSPACE, probabilistic proof checking (PCP), application of PCP to approximation hardness, complexity of proof systems, parallel complexity classes NC and AC, P-completeness. Recommended preparation: CSE 200.","prerequisites":"graduate standing."}
{"id":"cse202","name":"CSE 202. Algorithm Design and Analysis (4)","unit":4.0,"description":"The basic techniques for the design and analysis of algorithms. Divide-and-conquer, dynamic programming, data structures, graph search, algebraic problems, randomized algorithms, lower bounds, probabilistic analysis, parallel algorithms.","prerequisites":"CSE 101 or equivalent."}
{"id":"cse203a","name":"CSE 203A. Advanced Algorithms (4)","unit":4.0,"description":"Modern advances in design and analysis of algorithms. Exact syllabus varies. Topics include approximation, randomized algorithms, probabilistic analysis, heuristics, online algorithms, competitive analysis, models of memory hierarchy, parallel algorithms, number-theoretic algorithms, cryptanalysis, computational geometry, computational biology, network algorithms, VLSI CAD algorithms.","prerequisites":"CSE 202."}
{"id":"cse203b","name":"CSE 203B. Convex Optimization Formulations and Algorithms (4)","unit":4.0,"description":"We study the formulations and algorithms solving convex optimization problems. The topics include convex sets, functions, optimality conditions, duality concepts, gradient descent, conjugate gradient, interior-point methods, and applications. The objective of the course is to provide students the background and techniques for scientific computing and system optimization. Students cannot receive credit for CSE 203B if they have taken either ECE 273 or MATH 245B.","prerequisites":"Linear Algebra is recommended."}
{"id":"cse205a","name":"CSE 205A. Logic in Computer Science (4)","unit":4.0,"description":"(Formerly CSE 208D) Mathematical logic as a tool in computer science. Propositional logic, resolution, first-order logic, completeness and incompleteness theorems with computational viewpoint, finite model theory, descriptive complexity, logic programming, nonmonotonic reasoning, temporal logic. Applications to databases, automatic theorem proving, program verification, and distributed systems.","prerequisites":"CSE 200 or consent of instructor."}
{"id":"cse206a","name":"CSE 206A. Lattice Algorithms and Applications (4)","unit":4.0,"description":"(Formerly CSE 207C) Introduction to the algorithmic theory of point lattices (aka algorithmic geometry of numbers), and some of its most important applications in cryptography and cryptanalysis. Topics usually include LLL basis reduction algorithm, cryptanalysis of broadcast RSA, hardness of approximating lattice problems.","prerequisites":"CSE 202, CSE 200, or concurrent."}
{"id":"cse207","name":"CSE 207. Modern Cryptography (4)","unit":4.0,"description":"Private and public key cryptography, introduction to reduction-based proofs of security, concrete security, block ciphers, pseudorandom functions and generators, symmetric encryption, asymmetric encryption, computational number theory, RSA and discrete log systems, message authentication, digital signatures, key distribution and key management.","prerequisites":"CSE 202 or consent of instructor."}
{"id":"cse208","name":"CSE 208. Advanced Cryptography (4)","unit":4.0,"description":"Zero-knowledge, secure computation, session-key distribution, protocols, electronic payment, one-way functions, trapdoor permutations, pseudorandom bit generators, hardcore bits.","prerequisites":"CSE 202, CSE 200, and CSE 207 or consent of instructor."}
{"id":"cse209a","name":"CSE 209A. Topics\/Seminar in Algorithms, Complexity, and Logic (1\u20134)","unit":null,"description":"Topics of special interest in algorithms, complexity, and logic to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.","prerequisites":"consent of instructor."}
{"id":"cse209b","name":"CSE 209B. Topics\/Seminar in Cryptography (1\u20134)","unit":null,"description":"Topics of special interest in cryptography to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.","prerequisites":"consent of instructor."}
{"id":"cse210","name":"CSE 210. Principles of Software Engineering (4)","unit":4.0,"description":"(Formerly CSE 264A.) General principles in modern software engineering. Both theoretical and practical topics are covered. Theoretical topics include proofs of correctness, programming language semantics, and theory of testing. Practical topics include structured programming, modularization techniques, design of languages for reliable programming, and software tools.","prerequisites":"CSE 100, 131A, 120, or consent of instructor."}
{"id":"cse211","name":"CSE 211. Software Testing and Analysis (4)","unit":4.0,"description":"Survey of testing and analysis methods. Introduction to advanced topics in area as well as traditional production methods. Topics include inspections and reviews, formal analysis, verification and validation standards, nonstatistical testing, statistical-testing and reliability models, coverage methods, testing and analysis tools, and organization management and planning. Methods special to special development approaches such as object-oriented testing will also be described.","prerequisites":"undergraduate major in computer science or extensive industrial experience."}
{"id":"cse216","name":"CSE 216. Research Topics in Human-Computer Interaction (4)","unit":4.0,"description":"Prepares students to conduct original HCI research by reading and discussing seminal and cutting-edge research papers. Topics include design, social software, input techniques, mobile, and ubiquitous computing. Student pairs perform a quarter-long mini research project that leverages campus research efforts. Cross-listed with COGS 230.","prerequisites":"none."}
{"id":"cse218","name":"CSE 218. Advanced Topics in Software Engineering (4)","unit":4.0,"description":"This course will cover a current topic in software engineering in depth. Topics in the past have included software tools, impacts of programming language design, and software system structure. (S\/U grades permitted.)","prerequisites":"none."}
{"id":"cse219","name":"CSE 219. Design at Large (1)","unit":1.0,"description":"New societal challenges, cultural values, and technological opportunities are changing design\u2014and vice versa. The seminar explores this increased scale, real-world engagement, and disruptive impact. Invited speakers from UC San Diego and beyond share cutting-edge research on interaction, design, and learning. Cross-listed with COGS 229. (S\/U grades only.)","prerequisites":"none."}
{"id":"cse221","name":"CSE 221. Operating Systems (4)","unit":4.0,"description":"Operating system structures, concurrent computation models, scheduling, synchronization mechanisms, address spaces, memory management protection and security, buffering, streams, data-copying reduction techniques, file systems, naming, caching, disk organization, mapped files, remote file systems, case studies of major operating systems.","prerequisites":"CSE 120 and 121, or consent of instructor."}
{"id":"cse222a","name":"CSE 222A. Computer Communication Networks (4)","unit":4.0,"description":"(Formerly CSE 222.) Computer communication network concepts, protocols, and architectures, with an emphasis on an analysis of algorithms, protocols, and design methodologies. Topics will include layering, error control, flow control, congestion control, switching and routing, quality of service management, mobility, naming, security, and selected contemporary topics.","prerequisites":"CSE 123A or consent of instructor."}
{"id":"cse222b","name":"CSE 222B. Internet Algorithmics (4)","unit":4.0,"description":"(Formerly CSE 228H.) Techniques for speeding up internet implementations, including system restructuring, new algorithms, and hardware innovations. Topics include models for protocols, systems and hardware; efficiency principles; applying these principles to deriving techniques for efficient implementation of common endnode and router functions.","prerequisites":"CSE 123A or CSE 222A, or consent of instructor."}
{"id":"cse223b","name":"CSE 223B. Distributed Computing and Systems (4)","unit":4.0,"description":"Efficient primitives for distributed operating systems and high-performance network servers, including concurrent and event-driven server architectures, remote procedure calls, and load shedding. Distributed naming, directory, and storage services, replication for fault tolerance, and security in distributed systems.","prerequisites":"CSE 221, CSE 222A, or consent of instructor."}
{"id":"cse224","name":"CSE 224. Graduate Networked Systems (4)","unit":4.0,"description":"This course will provide a broad understanding of network design and implementation. Topics include techniques for building distributed applications, sockets programming, remote procedure calls (RPC), scale-out distributed directories, distributed consensus and state management, fault tolerance, networked storage, indirection, overlay networks, load balancing, and datacenter design.","prerequisites":"graduate standing or consent of instructor. This course is intended for MS students. PhD students may only take the course if they are not in systems\/networking concentrations."}
{"id":"cse227","name":"CSE 227. Computer Security (4)","unit":4.0,"description":"Security and threat models, risk analysis, authentication and authorization, auditing, operating systems security, access control mechanisms, protection mechanisms, distributed systems\/network security, security architecture, electronic commerce security mechanisms, security evaluation.","prerequisites":"CSE 221 or consent of instructor."}
{"id":"cse229a","name":"CSE 229A. Topics\/Seminar in Computer Systems (1\u20134)","unit":null,"description":"Discussion on problems of current research interest in computer systems. Possible areas of focus include distributed computing, computational grid, operating systems, fault-tolerant computing, storage systems, system services for the World Wide Web. Topics to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.","prerequisites":"consent of instructor."}
{"id":"cse229c","name":"CSE 229C. Topics\/Seminar in Computer Security (1\u20134)","unit":null,"description":"Discussion on problems of current research interest in computer security. Topics to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.","prerequisites":"consent of instructor."}
{"id":"cse230","name":"CSE 230. Principles of Programming Languages (4)","unit":4.0,"description":"(Formerly CSE 273.) Functional versus imperative programming. Type systems and polymorphism; the ML language. Higher order functions, lazy evaluation. Abstract versus concrete syntax, structural and well-founded induction. The lambda calculus, reduction strategies, combinators. Denotational semantics, elementary domain theory.","prerequisites":"CSE 130 or equivalent, or consent of instructor."}
{"id":"cse231","name":"CSE 231. Compiler Construction (4)","unit":4.0,"description":"(Formerly CSE 264C.) Advanced material in programming languages and translator systems. Topics include compilers and code optimization. May be coscheduled with CSE 131.","prerequisites":"restricted to students within the CS75, CS76, CS78, CS88, and CS89 majors. All other students will be allowed as space permits."}
{"id":"cse232","name":"CSE 232. Principles of Database Systems (4)","unit":4.0,"description":"(Formerly CSE 264D.) Database models including relational, hierarchic, and network approaches. Implementation of databases including query languages and system architectures.","prerequisites":"CSE 100 or consent of instructor."}
{"id":"cse232b","name":"CSE 232B. Database System Implementation (4)","unit":4.0,"description":"A hands-on approach to the principles of databases implementation. Algebraic rewriters\/optimizers, query processors, triggers. Beyond centralized relational databases.","prerequisites":"CSE 232."}
{"id":"cse233","name":"CSE 233. Database Theory (4)","unit":4.0,"description":"Theory of databases. Theory of query languages, dependency theory, deductive databases, incomplete information, complex objects, object-oriented databases, and more. Connections to logic and complexity theory including finite model theory and descriptive complexity.","prerequisites":"CSE 200."}
{"id":"cse237a","name":"CSE 237A. Introduction to Embedded Computing (4)","unit":4.0,"description":"Embedded system technologies including processors, DSP, memory, and software. System interfacing basics, communication strategies, sensors, and actuators. Mobile and wireless technology in embedded systems. Using predesigned hardware and software components. Design case studies in wireless, multimedia, and\/or networking domains.","prerequisites":"basic courses in digital hardware, algorithms and data structures, elementary calculus, and probability; or consent of instructor."}
{"id":"cse237b","name":"CSE 237B. Software for Embedded Systems (4)","unit":4.0,"description":"Embedded computing elements, device interfaces, time-critical IO handling. Embedded software design under size, performance, and reliability constraints. Software timing and functional validation. Programming methods and compilation for embeddable software. Embedded runtime systems. Case studies of real-time software systems.","prerequisites":"CSE 237A; or basic courses in programming, algorithms and data structures, elementary calculus, discrete math, computer architecture; or consent of instructor."}
{"id":"cse237c","name":"CSE 237C. Validation and Testing of Embedded Systems (4)","unit":4.0,"description":"Embedded system building blocks including IP cores. Cosimulation. Formal verification using model checking. Verification environments. Test challenges in core integration: compliance, feature, random, and collision testing. Core access and test integration. Interface-based verification and standards.","prerequisites":"CSE 237A; or basic courses in algorithms and data structures, elementary calculus, discrete math, symbolic logic, computer architecture; or consent of instructor."}
{"id":"cse237d","name":"CSE 237D. Design Automation and Prototyping for Embedded Systems (4)","unit":4.0,"description":"System representation and modeling. Abstract and language models. Simulation as a modeling activity. Computational and hw\/sw system prototypes. System analysis using models. Constraint and interface modeling. Behavioral compilation and synthesis.","prerequisites":"CSE 237A; or basic courses in digital logic design, algorithms and data structures, elementary calculus, discrete math, symbolic logic, computer architecture; or consent of instructor."}
{"id":"cse239a","name":"CSE 239A. Topics\/Seminar in Databases (1\u20134)","unit":null,"description":"Discussion on problems of current research interest in databases. Possible areas of focus include core database issues, data management on the web, data integration, new database models and applications, formal methods in databases. Topics to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.","prerequisites":"consent of instructor."}
{"id":"cse239b","name":"CSE 239B. Topics\/Seminar in Programming Languages (1\u20132)","unit":null,"description":"Discussion on problems of current research interest in programming languages, formal methods, and software engineering. Possible areas of focus include program verification, program synthesis, language design and implementation, developer productivity tools, language-based security. Topics to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be taken for credit up to eighteen times for a maximum of eighteen units.","prerequisites":"consent of instructor."}
{"id":"cse239c","name":"CSE 239C. Human-Computer Interaction Seminar (1)","unit":1.0,"description":"This course will introduce current trends in human-computer interaction (HCI) within and outside UC San Diego. The course will give an overview of the different research groups and environments at UC San Diego that focus on HCI, and then report on current work in the field across several HCI topics. May be taken for credit up to eighteen times.","prerequisites":""}
{"id":"cse240a","name":"CSE 240A. Principles of Computer Architecture (4)","unit":4.0,"description":"(Formerly CSE 240.) This course will cover fundamental concepts in computer architecture. Topics include instruction set architecture, pipelining, pipeline hazards, bypassing, dynamic scheduling, branch prediction, superscalar issue, memory-hierarchy design, advanced cache architectures, and multiprocessor architecture issues.","prerequisites":"CSE 141 or consent of instructor."}
{"id":"cse240b","name":"CSE 240B. Parallel Computer Architecture (4)","unit":4.0,"description":"This course covers advanced topics in parallel computer architecture, including on-chip and off-chip interconnection networks, cache coherence, cache consistency, hardware multithreading, multicore and tiled architectures. It incorporates the latest research and development on parallel architectures and compilation techniques for those architectures. CSE 240A recommended.","prerequisites":"graduate standing."}
{"id":"cse240c","name":"CSE 240C. Advanced Microarchitecture (4)","unit":4.0,"description":"This course covers advanced topics in computer architecture. It incorporates the latest research and development on topics such as branch prediction, instruction-level parallelism, cache hierarchy design, speculative multithreading, reliable architectures, and power-management techniques. CSE 240A recommended.","prerequisites":"graduate standing."}
{"id":"cse241a","name":"CSE 241A\/ECE 260B. VLSI Integration of Computing Circuitry (4)","unit":4.0,"description":"VLSI integrated-circuit building blocks of computing systems, and their implementation. Computer-aided design and performance simulations, design exercises and projects. Devices, standard cells and interconnects, clocking, power\/ground distribution, arithmetic modules, memories. Methodologies and tradeoffs in system implementation.","prerequisites":"layout (CSE 165 or ECE 260A) and logic design (CSE 140 or ECE 111), or consent of instructor."}
{"id":"cse243a","name":"CSE 243A. Introduction to Synthesis Methodologies in VLSI CAD (4)","unit":4.0,"description":"Hardware software codesign, architectural level synthesis, control synthesis and optimization, scheduling, binding, register and bus sharing, interconnect design, module selection, combinational logic optimization, state minimization, state encoding, and retiming.","prerequisites":"none."}
{"id":"cse244a","name":"CSE 244A. VLSI Test (4)","unit":4.0,"description":"Design for test, testing economics, defects, failures and faults, fault models, fault simulation, automatic test pattern generation, functional testing, memory, PLA, FPGA, microprocessor test, and fault diagnosis.","prerequisites":"none."}
{"id":"cse245","name":"CSE 245. Computer Aided Circuit Simulation and Verification (4)","unit":4.0,"description":"This course is about the computer algorithms, techniques, and theory used in the simulation and verification of electrical circuits.","prerequisites":"CSE 241A or consent of instructor."}
{"id":"cse248","name":"CSE 248. Algorithmic and Optimization Foundations for VLSI CAD (4)","unit":4.0,"description":"Algorithmic techniques and optimization frameworks for large-scale, difficult optimizations. Primal-dual multicommodity flow approximations, approximations for geometric and graph Steiner formulations, continuous placement optimization, heuristics for Boolean satisfiability, multilevel methods, semidefinite programming, and application to other formulations (e.g., scheduling).","prerequisites":"CSE 241A or CSE 242A, or consent of instructor."}
{"id":"cse249a","name":"CSE 249A. Topics\/Seminar in Computer Architecture (1\u20134)","unit":null,"description":"Topics of special interest in computer architecture to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.","prerequisites":"consent of instructor."}
{"id":"cse249b","name":"CSE 249B. Topics\/Seminar in VLSI (1\u20134)","unit":null,"description":"Topics of special interest in VLSI to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.","prerequisites":"consent of instructor."}
{"id":"cse250a","name":"CSE 250A. Principles of Artificial Intelligence: Probabilistic Reasoning and Learning (4)","unit":4.0,"description":"Methods based on probability theory for reasoning and learning under uncertainty. Content may include directed and undirected probabilistic graphical models, exact and approximate inference, latent variables, expectation-maximization, hidden Markov models, Markov decision processes, applications to vision, robotics, speech, and\/or text. Recommended preparation: CSE 103 or similar course.","prerequisites":"graduate standing in CSE or consent of instructor."}
{"id":"cse251a","name":"CSE 251A. Principles of Machine Learning: Learning Algorithms (4)","unit":4.0,"description":"(Formerly CSE 250B.) Algorithms for supervised and unsupervised learning from data. Content may include maximum likelihood; log-linear models, including logistic regression and conditional random fields; nearest neighbor methods; kernel methods; decision trees; ensemble methods; optimization algorithms; topic models; neural networks; and backpropagation. Renumbered from CSE 250B. Students may not receive credit for CSE 251A and CSE 250B. Recommended preparation: CSE 103 or similar course.","prerequisites":"graduate standing or consent of instructor."}
{"id":"cse251b","name":"CSE 251B. Principles of Machine Learning: Neural Networks for Pattern Recognition (4)","unit":4.0,"description":"(Formerly CSE 253.) This course covers Hopfield networks, application to optimization problems layered perceptrons, recurrent networks, and unsupervised learning. Programming exercises explore model behavior with a final project or exam on a cognitive science, artificial intelligence, or optimization problem of the student\u2019s choice. Renumbered from CSE 253. Students may not receive credit for CSE 251B and CSE 253. Recommended preparation: Knowledge of C.","prerequisites":"graduate standing."}
{"id":"cse251c","name":"CSE 251C. Principles of Machine Learning: Machine Learning Theory (4)","unit":4.0,"description":"(Formerly CSE 250C.) Theoretical foundations of machine learning. Topics include concentration of measure, the PAC model, uniform convergence bounds, and VC dimension. Possible topics include online learning, learning with expert advice, multiarmed bandits, and boosting. Renumbered from CSE 250C. Students may not receive credit for CSE 251C and CSE 250C. Recommended preparation: CSE 103 and CSE 101 or similar course.","prerequisites":"graduate standing or consent of instructor."}
{"id":"cse252a","name":"CSE 252A. Computer Vision I (4)","unit":4.0,"description":"Comprehensive introduction to computer vision providing broad coverage including low-level vision (image formation, photometry, color, image feature detection), inferring 3-D properties from images (shape-from shading, stereo vision, motion interpretation) and object recognition. Companion to CSE 252B covering complementary topics.","prerequisites":"MATH 10D and MATH 20A\u2013F or equivalent."}
{"id":"cse252b","name":"CSE 252B. Computer Vision II (4)","unit":4.0,"description":"Comprehensive introduction to computer vision providing focused coverage of multiview geometry, structure from motion, image segmentation, motion segmentation, texture analysis and recognition, object detection, and image-based rendering. Companion to CSE 252A covering complementary topics.","prerequisites":"MATH 10D and MATH 20A\u2013F or equivalent."}
{"id":"cse252c","name":"CSE 252C. Selected Topics in Vision and Learning (1\u20134)","unit":null,"description":"Selected topics in computer vision and statistical pattern recognition, with an emphasis on recent developments. Possible topics include grouping and segmentation, object recognition and tracking, multiple view geometry, kernel-based methods, dimensionality reduction, and mixture models.","prerequisites":"CSE 252 or equivalent and CSE 250B or equivalent."}
{"id":"cse252d","name":"CSE 252D. Advanced Computer Vision (4)","unit":4.0,"description":"This course covers advanced concepts in computer vision. Example topics include 3-D reconstruction, face recognition, object detection, semantic segmentation, action recognition, and domain adaptation. Consistent with recent developments, deep learning forms a significant fraction of the class. Lectures and assignments cover recent works on fundamental problems in computer vision, with the aim to prepare students for pursuing careers in the field. Recommended preparation: Completion of one of CSE 252A, 252B, 250A, or 250B is highly recommended.","prerequisites":"graduate standing."}
{"id":"cse254","name":"CSE 254. Statistical Learning (4)","unit":4.0,"description":"Learning algorithms based on statistics. Possible topics include minimum-variance unbiased estimators, maximum likelihood estimation, likelihood ratio tests, resampling methods, linear logistic regression, feature selection, regularization, dimensionality reduction, manifold detection. An upper-division undergraduate course on probability and statistics such as MATH 183 or 186, or any graduate course on statistics, pattern recognition, or machine learning is recommended.","prerequisites":"graduate standing."}
{"id":"cse255","name":"CSE 255. Data Mining and Predictive Analytics (4)","unit":4.0,"description":"Learning methods for applications. Content may include data preparation, regression and classification algorithms, support vector machines, random forests, class imbalance, overfitting, decision theory, recommender systems and collaborative filtering, text mining, analyzing social networks and social media, protecting privacy, A\/B testing. Recommended preparation: CSE 103 or similar.","prerequisites":"graduate standing or consent of instructor."}
{"id":"cse256","name":"CSE 256\/LING 256. Statistical Natural Language Processing (4)","unit":4.0,"description":"An introduction to modern statistical approaches to natural language processing: part of speech tagging, word sense disambiguation and parsing, using Markov models, hidden Markov models, and probabilistic context-free grammars. Recommended preparation: LIGN 165, LIGN 245, CSE 151, CSE 250A, or CSE 254.","prerequisites":"graduate standing or consent of instructor."}
{"id":"cse257","name":"CSE 257. Search and Optimization (4)","unit":4.0,"description":"The course will cover core algorithms for sequential decision-making problems in autonomous systems. Topics include heuristic search, Monte Carlo search, deep reinforcement learning, nonlinear optimization, mixed-integer optimization, and stochastic optimization.","prerequisites":"graduate standing or consent of instructor."}
{"id":"cse258","name":"CSE 258. Recommender Systems and Web Mining (4)","unit":4.0,"description":"Current methods for data mining and predictive analytics. Emphasis is on studying real-world data sets, building working systems, and putting current ideas from machine learning research into practice. Recommended preparation: No previous background in machine learning is required, but students should be comfortable with programming (all example code will be in Python), and with basic optimization and linear algebra.","prerequisites":"graduate standing."}
{"id":"cse258a","name":"CSE 258A. Cognitive Modeling (4)","unit":4.0,"description":"Connectionist models and a sampling of other cognitive modeling techniques. Models of language processing, memory, sequential processes, and vision. Areas covered may vary depending on student and faculty interests. Can be repeated for credit. CSE 151 or CSE 250B or CSE 253 or CSE 254, or equivalent experience recommended.","prerequisites":"graduate standing."}
{"id":"cse259","name":"CSE 259. Seminar in Artificial Intelligence (1)","unit":1.0,"description":"A weekly meeting featuring local (and occasional external) speakers discussing their current research in artificial intelligence neural networks, and genetic algorithms. (S\/U grades only.)","prerequisites":"none."}
{"id":"cse260","name":"CSE 260. Parallel Computation (4)","unit":4.0,"description":"(Formerly CSE 274A.) This course provides an overview of parallel hardware, algorithms, models, and software. Topics include Flynn\u2019s taxonomy, interconnection networks, memory organization, a survey of commercially available multiprocessors, parallel algorithm paradigms and complexity criteria, parallel programming environments and tools for parallel debugging, language specification, mapping, performance, etc.","prerequisites":"graduate standing or consent of instructor."}
{"id":"cse262","name":"CSE 262. System Support for Applications of Parallel Computation (4)","unit":4.0,"description":"This course will explore design of software support for applications of parallel computation. Topics include programming languages, run time support, portability, and load balancing. The course will terminate in a project.","prerequisites":"consent of instructor."}
{"id":"cse270","name":"CSE 270. Discrete Differential Geometry (4)","unit":4.0,"description":"This course introduces the mathematics and algorithms for digital geometry processing and simulation problems in computer graphics. Topics include the continuous and discrete theory of curves and surfaces, exterior calculus, Hodge theory, and gauge theory with various applications ranging from texture synthesis, differential equations, and vector field design. Restricted to CS75, CS76, CS78, CS88, and CS89 majors. Other students will be allowed as space permits.","prerequisites":""}
{"id":"cse272","name":"CSE 272. Advanced Image Synthesis (4)","unit":4.0,"description":"Computer graphics techniques for creating realistic images. Topics include ray tracing, global illumination, subsurface scattering, and participating media. CSE 168 or equivalent recommended.","prerequisites":""}
{"id":"cse273","name":"CSE 273. Computational Photography (4)","unit":4.0,"description":"Computational photography overcomes the limitations of traditional photography using computational techniques from image processing, computer vision, and computer graphics. This course provides a comprehensive introduction to computational photography and the practical techniques used to overcome traditional photography limitations (e.g., image resolution, dynamic range, and defocus and motion blur) and those used to produce images (and more) that are not possible with traditional photography. Linear algebra, calculus, and optimization, MATLAB, Python, or other programming experience recommended.","prerequisites":"course is restricted to students in the following major codes: CS75, CS76, and CS78. Graduate students in other major codes will be allowed if space permits."}
{"id":"cse274","name":"CSE 274. Selected Topics in Graphics (2\u20134)","unit":null,"description":"Selected topics in computer graphics, with an emphasis on recent developments. Possible topics include computer animation, shape modeling and analysis, image synthesis, appearance modeling, and real-time rendering. CSE 168 or CSE 169 recommended.","prerequisites":"graduate standing or consent of instructor."}
{"id":"cse275","name":"CSE 275. Deep Learning for 3-D Data (4)","unit":4.0,"description":"This course teaches state-of-the-art concepts and algorithms of geometry that are being used in computer graphics, computer vision, and machine learning. It covers topics such as geometry foundations (differentiable geometry), 3-D reconstruction, structured 3-D learning, geometry processing, and geometry collection analysis. Recommended preparation: previous course work on deep learning and machine learning courses is highly recommended.","prerequisites":"graduate standing. Restricted to students within the CS75, CS76, CS78, CS88, and CS89 majors. All other students will be allowed as space permits."}
{"id":"cse276a","name":"CSE 276A. Introduction to Robotics (4)","unit":4.0,"description":"This course provides an introduction to the fundamentals of robotics across kinematics, sensor systems, estimation, control, and planning. The contents include introduction to robotics in general, kinematics of robot systems, robot arm systems, sensors for robots, basic vision for robots, estimation methods, perception, robot localization and navigation, control of robot systems, robot motion planning, robot task planning, robot architectures, and evaluation of robot systems. It is expected that students have a solid understanding of linear algebra, can program in Python or C++, and have a basic understanding of methods for reasoning under uncertainty.","prerequisites":"graduate standing."}
{"id":"cse276b","name":"CSE 276B. Human Robot Interaction (4)","unit":4.0,"description":"Robots are entering human spaces. How do we make them functional, useful, and acceptable? This course explores the core computational, engineering, and experimental challenges in human-robot interaction. Course topics include shared autonomy, perception of people and context, coordination, collaboration, human-guided learning, robot design, and experimental robotics. Students will review seminal and recent papers in the field and engage in team-based projects with physical, mobile robots. This class requires expertise in software development. Prior exposure to robotics, computer vision, or machine learning is recommended. Students should be comfortable reading and analyzing scientific papers at the graduate level. Students may not receive credit for CSE 276B and CSE 291 (A00) taught winter 2017 with the same subtitle.","prerequisites":"graduate standing."}
{"id":"cse276c","name":"CSE 276C. Mathematics for Robotics (4)","unit":4.0,"description":"The course will provide a comprehensive introduction to the key mathematical concepts used for modeling, implementing, and evaluation of robot systems. The course will use small home assignments tasks and a larger robot project to exercise the topics covered in class. The students should have a basic knowledge of mathematics and know one or more programming languages such as Python or MATLAB for completion of homework assignments.","prerequisites":"graduate standing."}
{"id":"cse276d","name":"CSE 276D. Healthcare Robotics (4)","unit":4.0,"description":"Robotics has the potential to improve well-being for millions of people, support care givers, and aid the clinical workforce. This course brings together engineers, clinicians, and end users to explore this exciting new field. It is project-based, interactive, and hands on, and involves working closely with stakeholders to develop prototypes that solve real-world problems.\u00a0Students will explore the latest research in healthcare robotics, human-robot teaming, and health design. JSOE students should be comfortable building and experimenting within their area of expertise (e.g., CSE, software development, MAE, rapid prototyping). Students with clinical backgrounds should be familiar with translational research methods. Students may not receive credit for CSE 276D and CSE 291 (H00) taught spring 2017 with the same subtitle. Program or materials fees may apply.","prerequisites":"graduate standing."}
{"id":"cse276e","name":"CSE 276E. Robot Systems Design and Implementation (4)","unit":4.0,"description":"End to end system design of embedded electronic systems including PCB design and fabrication, software control system development, and system integration. Program or materials fees may apply. May be coscheduled with CSE 176E.","prerequisites":"instructor approval required to ensure sufficient programming and project experience to be successful in the course."}
{"id":"cse276f","name":"CSE 276F. Machine Learning for Robotics (4)","unit":4.0,"description":"The first half of this course covers basic concepts and algorithms of robotics, and the second half introduces the basic concepts, algorithms, and research trends of reinforcement learning. We assume that the course takers are interested in how to train a robot that can interact with the physical world by machine learning methods. We will instruct the students to build an armed robot in a simulated virtual environment through programming assignments.","prerequisites":"instructor approval required."}
{"id":"cse280a","name":"CSE 280A. Algorithms in Computational Biology (4)","unit":4.0,"description":"(Formerly CSE 206B.) The course focuses on algorithmic aspects of modern bioinformatics and covers the following topics: computational gene hunting, sequencing, DNA arrays, sequence comparison, pattern discovery in DNA, genome rearrangements, molecular evolution, computational proteomics, and others.","prerequisites":"CSE 202 preferred or consent of instructor."}
{"id":"cse282","name":"CSE 282\/BENG 202. Bioinformatics II: Sequence and Structure Analysis\u2014Methods and Applications (4)","unit":4.0,"description":"(Formerly CSE 257A\/BENG 202.) Introduction to methods for sequence analysis. Applications to genome and proteome sequences. Protein structure, sequence-structure analysis.","prerequisites":"Pharm 201 or consent of instructor."}
{"id":"cse283","name":"CSE 283\/BENG 203. Bioinformatics III: Functional Genomics (4)","unit":4.0,"description":"Annotating genomes, characterizing functional genes, profiling, reconstructing pathways.","prerequisites":"Pharm 201, BENG 202\/CSE 282, or consent of instructor."}
{"id":"cse284","name":"CSE 284. Personal Genomics for Bioinformaticians (4)","unit":4.0,"description":"This course provides an introduction to bioinformatics techniques for analyzing and interpreting human genomes. Topics covered include an introduction to medical and population genetics, ancestry, finding and interpreting disease-causing variants, genome-wide association studies, genetic risk prediction, analyzing next-generation sequencing data, how to scale current genomics techniques to analyze hundreds of thousands of genomes, and the social impact of the personal genomics revolution. Programming experience, familiarity with the UNIX command line, and a basic course in probability and statistics are strongly recommended. Students may not receive credit for CSE 284 and CSE 291 (E00) taught winter 2017 with the same subtitle.","prerequisites":"graduate standing."}
{"id":"cse290","name":"CSE 290. Seminar in Computer Science and Engineering (1\u20134)","unit":null,"description":"(Formerly CSE 280A.) A seminar course in which topics of special interest in computer science and engineering will be presented by staff members and graduate students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit. (S\/U grades only.)","prerequisites":"consent of instructor. (Offered as faculty resources permit.)"}
{"id":"cse291","name":"CSE 291. Topics in Computer Science and Engineering (1\u20134)","unit":null,"description":"Topics of special interest in computer science and engineering. Topics may vary from quarter to quarter. May be coscheduled with CSE 190.","prerequisites":"consent of instructor. S\/U grades permitted. Offered as faculty resources permit."}
{"id":"cse292","name":"CSE 292. Faculty Research Seminar (1)","unit":1.0,"description":"(Formerly CSE 282.) Computer science and engineering faculty will present one-hour seminars of the current research work in their areas of interest.","prerequisites":"CSE graduate status."}
{"id":"cse293","name":"CSE 293. Special Project in Computer Science and Engineering (1\u201312)","unit":null,"description":"The student will conceive, design, and execute a project in computer science under the direction of a faculty member. The project will typically include a large programming or hardware design task, but other types of projects are possible.","prerequisites":"CSE graduate student status. (CS 75, 76, 77, 78, 79, 80, 81) (S\/U grades only.)"}
{"id":"cse294","name":"CSE 294. Research Meeting in CSE (2)","unit":2.0,"description":"Advanced study and analysis of active research in computer science and computer engineering. Discussion of current research and literature in the research specialty of the staff member teaching the course.","prerequisites":"consent of instructor."}
{"id":"cse298","name":"CSE 298. Independent Study (1\u201316)","unit":null,"description":"Open to properly qualified graduate students who wish to pursue a problem through advanced study under the direction of a member of the staff. (S\/U grades only.)","prerequisites":"consent of instructor."}
{"id":"cse299","name":"CSE 299. Research (1\u201316)","unit":null,"description":"Research.","prerequisites":"consent of faculty."}
{"id":"cse500","name":"CSE 500. Teaching Assistantship (2\u20134)","unit":null,"description":"A course in which teaching assistants are aided in learning proper teaching methods by means of supervision of their work by the faculty: handling of discussions, preparation and grading of examinations and other written exercises, and student relations. May be used to meet teaching experience requirement for candidates for the PhD degree. Number of units for credit depends on number of hours devoted to class or section assistance.","prerequisites":"graduate standing and consent of instructor."}
{"id":"cse599","name":"CSE 599. Teaching Methods in Computer Science (2)","unit":2.0,"description":"Training in teaching methods in the field of computer science. This course examines theoretical and practical communication and teaching techniques particularly appropriate to computer science.","prerequisites":"consent of faculty."}
